import Styles from './products.module.scss';
import { useState, useRef } from 'react';
import product_3 from '../../../images/products/product_3.webp';
import product_3_1 from '../../../images/products/product_3_1.webp';
import product_3_2 from '../../../images/products/product_3_2.webp';
import { BigPhoto } from '../../ui/big-photo/BigPhoto';
import { useClickToScroll } from '../../../hooks/useClickToScroll';
import { useTranslation } from 'react-i18next';
import { BackToTop } from '../../ui/back-to-top/BackToTop';

export const MeasuringSystem = () => {
  const { t } = useTranslation('products');

  const [oneIsOpen, setOneIsOpen] = useState(false);
  const [twoIsOpen, setTwoIsOpen] = useState(false);
  const [threeIsOpen, setThreeIsOpen] = useState(false);
  

  const sectionsRef = useRef([]);
  const handleClick = useClickToScroll();

  return (
    <div className={Styles.container}>
      <div className={Styles.mainContent}>
        <aside className={Styles.sidebar}>
          <div className={Styles.navMenu}>
            <button onClick={() => handleClick('products-1')} className={`${Styles.navItem}`}>
              <span className={Styles.navIcon}>üõ¢Ô∏è</span>
              <p>{t('–°–ò–ö–ù')}</p>
            </button>
            <button onClick={() => handleClick('products-2')} className={`${Styles.navItem}`}>
              <span className={Styles.navIcon}>üí®</span>
              <p>{t('–°–ò–ö–ì')}</p>
            </button>
            <button onClick={() => handleClick('products-3')} className={`${Styles.navItem}`}>
              <span className={Styles.navIcon}>üíß</span>
              <p>{t('–°–ò–ö–í')}</p>
            </button>
            
          </div>
        </aside>

        <div className={Styles.content}>
          <section id="products-1" ref={el => sectionsRef.current[0] = el} className={Styles.section}>
              <div className={Styles.sectionHeader}>
              <h2>{t('–°–ò–ö–ù')}</h2>
            </div>
            <div className={Styles.mainImageContainer}>
              <div className={Styles.imageCard} onClick={() => setOneIsOpen(true)}>
                <img src={product_3.src} alt="–ú–æ–±–∏–ª—å–Ω–∞—è –ê–ì–ó–£" className={Styles.mainImage} />
                <div className={Styles.imageOverlay}>
                  <span className={Styles.zoomText}>{t('–£–≤–µ–ª–∏—á–µ–Ω–∏–µ')}</span>
                </div>
              </div>
            </div>
            <div className={Styles.features}>
              <h3>{t('–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ')}</h3>
              <ul className={Styles.featuresList}>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üìä</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ò–∑–º–µ—Ä–µ–Ω–∏—è')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üîç</div>
                  <div className={Styles.featureText}>
                    <p>{t('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üß™</div>
                  <div className={Styles.featureText}>
                    <p>{t('–û—Ç–±–æ—Ä')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üíª</div>
                  <div className={Styles.featureText}>
                    <p>{t('–í—ã–¥–∞—á–∞')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üè≠</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ò–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞—Ç—å—Å—è')}</p>
                  </div>
                </li>
              </ul>
            </div>
          </section>

          <section id="products-2" ref={el => sectionsRef.current[1] = el} className={Styles.section}>
              <div className={Styles.sectionHeader}>
              <h2>{t('–°–ò–ö–ì')}</h2>
            </div>
            <div className={Styles.mainImageContainer}>
              <div className={Styles.imageCard} onClick={() => setTwoIsOpen(true)}>
                <img src={product_3_1.src} alt="–ú–æ–±–∏–ª—å–Ω–∞—è –ê–ì–ó–£" className={Styles.mainImage} />
                <div className={Styles.imageOverlay}>
                  <span className={Styles.zoomText}>{t('–£–≤–µ–ª–∏—á–µ–Ω–∏–µ')}</span>
                </div>
              </div>
            </div>
            <div className={Styles.features}>
              <h3>{t('–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ')}</h3>
              <ul className={Styles.featuresList}>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>ü§ñ</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üèóÔ∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–í—Ö–æ–¥–∏—Ç')}</p>
                  </div>
                </li>
              </ul>
            </div>
            <div className={Styles.features}>
              <h3>{t('–¢–∏–ø–æ–≤–æ–π')}</h3>
              <ul className={Styles.featuresList}>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üå™Ô∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üßÆ</div>
                  <div className={Styles.featureText}>
                    <p>{t('–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üéõÔ∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–†–µ–≥—É–ª—è—Ç–æ—Ä—ã')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üíæ</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ê–ø–ø–∞—Ä–∞—Ç–Ω–æ')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üìä</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ì–∞–∑–æ–≤–∞—è')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üíß</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üå°Ô∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–∏')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üß™</div>
                  <div className={Styles.featureText}>
                    <p>{t('–°–∏—Å—Ç–µ–º–∞')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üõ†Ô∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ö–æ–º–ø–ª–µ–∫—Å–æ–≤')}</p>
                  </div>
                </li>
              </ul>
            </div>
          </section>

          <section id="products-3" ref={el => sectionsRef.current[2] = el} className={Styles.section}>
              <div className={Styles.sectionHeader}>
              <h2>{t('–°–ò–ö–í')}</h2>
            </div>
            <div className={Styles.mainImageContainer}>
              <div className={Styles.imageCard} onClick={() => setThreeIsOpen(true)}>
                <img src={product_3_2.src} alt="–ú–æ–±–∏–ª—å–Ω–∞—è –ê–ì–ó–£" className={Styles.mainImage} />
                <div className={Styles.imageOverlay}>
                  <span className={Styles.zoomText}>{t('–£–≤–µ–ª–∏—á–µ–Ω–∏–µ')}</span>
                </div>
              </div>
            </div>
            <div className={Styles.features}>
              <h3>{t('–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ')}</h3>
              <ul className={Styles.featuresList}>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üíß</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ö–æ–ª–∏—á–µ—Å—Ç–≤–∞')}</p>
                  </div>
                </li>                
              </ul>
            </div>
            <div className={Styles.features}>
              <h3>{t('–¢–∏–ø–æ–≤–æ–π')}</h3>
              <ul className={Styles.featuresList}>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üìä</div>
                  <div className={Styles.featureText}>
                    <p>{t('–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üíª</div>
                  <div className={Styles.featureText}>
                    <p>{t('–û–±—Ä–∞–±–æ—Ç–∫–∏')}</p>
                  </div>
                </li>
                <li className={Styles.feature}>
                  <div className={Styles.featureIcon}>üõ†Ô∏è</div>
                  <div className={Styles.featureText}>
                    <p>{t('–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ')}</p>
                  </div>
                </li>
              </ul>
            </div>
          </section>
        </div>
      </div>

      <BackToTop/>
      {oneIsOpen && <BigPhoto src={product_3.src} onClose={() => setOneIsOpen(false)} />}
      {twoIsOpen && <BigPhoto src={product_3_1.src} onClose={() => setTwoIsOpen(false)} />}
      {threeIsOpen && <BigPhoto src={product_3_2.src} onClose={() => setThreeIsOpen(false)} />}
    </div>      
  );
};
